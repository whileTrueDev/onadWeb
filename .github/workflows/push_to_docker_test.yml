name: Push To Docker (TEST SERVER)

on:
  push:
    branches: [test]

jobs:
  build:
    strategy:
      matrix:
        node-version: [12.x]

    runs-on: ubuntu-latest

    # This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
    # For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Cache yarn dependencies
        uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build with webpack (with Dependencies Installing)
        env:
          NODE_ENV: production
          REACT_APP_PRODUCTION_API_HOSTNAME: ${{ secrets.REACT_APP_TEST_API_HOSTNAME }}
          REACT_APP_PRODUCTION_REACT_HOSTNAME: ${{ secrets.REACT_APP_TEST_REACT_HOSTNAME }}
          REACT_APP_GOOGLE_MAP_API_KEY: ${{ secrets.REACT_APP_GOOGLE_MAP_API_KEY }}
        run: |
          cd client-ts
          yarn install
          yarn build
          cd ..
          cd server
          yarn install
          yarn build
          cd ..

      - name: <client-ts> Dockerize and Push to docker hub
        uses: elgohr/Publish-Docker-Github-Action@2.13
        with:
          name: hwasurr/onad_web_test
          workdir: client-ts
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,1.${{ github.run_number }}"

      - name: <server> Dockerize and Push to docker hub
        uses: elgohr/Publish-Docker-Github-Action@2.13
        with:
          name: hwasurr/onad_web_api_test
          workdir: server
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,1.${{ github.run_number }}"
